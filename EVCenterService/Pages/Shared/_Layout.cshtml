<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - EV Service Center</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>
<body class="@ViewData["BodyClass"]">
    <header class="@(ViewData["BodyClass"] == "body-homepage-dark" ? "public-header-dark" : "public-header-light") sticky-top">
        <nav class="navbar navbar-expand-lg">
            <div class="container">
                <a class="navbar-brand d-flex align-items-center" asp-area="" asp-page="/Index">
                    <img src="~/images/evolve-auto-logo.png" alt="EV Service Center Logo" class="header-logo">
                    <span>EV Service Center</span>
                </a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <ul class="navbar-nav main-nav">
                        <li class="nav-item">
                            <a class="nav-link @(ViewData["Title"] == "Trang chủ" ? "active" : "")" asp-page="/Index">Trang chủ</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Dịch vụ</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Về chúng tôi</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" href="#">Liên hệ</a>
                        </li>
                    </ul>

                    <ul class="navbar-nav ms-auto auth-buttons">
                        @if (User.Identity != null && User.Identity.IsAuthenticated)
                        {
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    Chào, @User.FindFirst(System.Security.Claims.ClaimTypes.GivenName)?.Value
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <li><a class="dropdown-item" asp-page="/Admin/Index">Trang quản trị</a></li>
                                    }
                                    else if (User.IsInRole("Staff"))
                                    {
                                        <li><a class="dropdown-item" asp-page="/Staff/Index">Quản lý Lịch hẹn</a></li>
                                        <li><a class="dropdown-item" asp-page="/Staff/Chat">Chat với khách hàng</a></li>
                                    }
                                    else
                                    {
                                        <li><a class="dropdown-item" asp-page="/Customer/Index">Trang cá nhân</a></li>
                                    }
                                    <li><hr class="dropdown-divider"></li>
                                    <li>
                                        <form class="form-inline" asp-page="/Account/Logout" method="post">
                                            <button type="submit" class="dropdown-item">Đăng xuất</button>
                                        </form>
                                    </li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="btn btn-login me-2" asp-page="/Account/Login">Đăng nhập</a>
                            </li>
                            <li class="nav-item">
                                <a class="btn btn-register" asp-page="/Account/Register">Đăng ký</a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <main role="main">
        @RenderBody()
    </main>

    <footer class="@(ViewData["BodyClass"] == "body-homepage-dark" ? "footer-dark" : "footer-light")">
        <div class="container">
            <div class="row gy-4">
                <div class="col-lg-4 col-md-6">
                    <div class="d-flex align-items-center mb-2">
                        <img src="~/images/evolve-auto-logo.png" alt="EV Service Center Logo" class="footer-logo">
                        <span class="fw-bold fs-5">EV Service Center</span>
                    </div>
                    <p class="text-secondary">Trung tâm dịch vụ xe điện hàng đầu Việt Nam.</p>
                </div>
                <div class="col-lg-2 offset-lg-1 col-md-6">
                    <h6 class="fw-bold">Dịch vụ</h6>
                    <ul class="list-unstyled">
                        <li><a href="#" class="text-secondary text-decoration-none">Bảo dưỡng định kỳ</a></li>
                        <li><a href="#" class="text-secondary text-decoration-none">Sửa chữa</a></li>
                        <li><a href="#" class="text-secondary text-decoration-none">Thay thế phụ tùng</a></li>
                    </ul>
                </div>
                <div class="col-lg-2 col-md-6">
                    <h6 class="fw-bold">Liên hệ</h6>
                    <ul class="list-unstyled text-secondary">
                        <li>Hotline: 1900-xxxx</li>
                        <li>Email: support@ev.com</li>
                    </ul>
                </div>
                <div class="col-lg-2 col-md-6">
                    <h6 class="fw-bold">Theo dõi</h6>
                    <ul class="list-unstyled">
                        <li><a href="#" class="text-secondary text-decoration-none">Facebook</a></li>
                        <li><a href="#" class="text-secondary text-decoration-none">Instagram</a></li>
                    </ul>
                </div>
            </div>
            <hr class="my-4">
            <div class="text-center text-secondary small">
                &copy; 2025 - EV Service Center. All rights reserved.
            </div>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    @if (User.Identity != null && User.Identity.IsAuthenticated)
    {
        <style>
            .chat-widget-button {
                position: fixed;
                bottom: 25px;
                right: 25px;
                background-color: #0d6efd;
                color: white;
                width: 60px;
                height: 60px;
                border-radius: 50%;
                display: flex;
                align-items: center;
                justify-content: center;
                font-size: 24px;
                cursor: pointer;
                box-shadow: 0 4px 12px rgba(0,0,0,0.2);
                z-index: 1040;
            }

            /* === BẮT ĐẦU SỬA GIAO DIỆN TỐI === */
            .chat-popup {
                position: fixed;
                bottom: 100px;
                right: 25px;
                width: 320px;
                height: 450px;
                z-index: 1050;
                overflow: hidden;
                /* Style nền tối */
                background: #0d1117; /* Nền đen */
                border: 1px solid #30363d; /* Viền mờ */
                border-radius: 8px;
                box-shadow: 0 4px 12px rgba(0,0,0,0.2);
            }
            .chat-header { 
                background: #161b22; /* Nền header tối */
                color: white; 
                padding: 1rem; 
                font-weight: bold;
                border-bottom: 1px solid #30363d;
            }
            .chat-messages {
                background: #0d1117; /* Nền ô chat */
                color: #f0f6fc;
            }
            .chat-input {
                background: #161b22; /* Nền ô nhập liệu */
                border-top: 1px solid #30363d;
            }
            .chat-input input {
                background: transparent;
                color: white; /* Chữ trắng */
                border: none;
            }
            .chat-input input::placeholder {
                color: #8b949e;
            }
    
            /* Style cho bong bóng chat */
            .chat-messages strong {
                font-size: 0.8rem;
                color: #8b949e;
                display: block;
                margin-bottom: 2px;
            }
            .chat-messages .msg-customer { text-align: right; }
            .chat-messages .msg-customer strong { display: none; } /* Ẩn chữ "Bạn:" */
            .chat-messages .msg-customer span { 
                background: #0d6efd; /* Màu xanh (Customer) */
                color: white; 
                padding: 8px 12px; 
                border-radius: 12px 12px 0 12px;
                display: inline-block;
            }
    
            .chat-messages .msg-staff { text-align: left; }
            .chat-messages .msg-staff span { 
                background: #30363d; /* Màu xám (Staff) */
                color: #f0f6fc; 
                padding: 8px 12px; 
                border-radius: 12px 12px 12px 0;
                display: inline-block;
            }
            /* === KẾT THÚC SỬA GIAO DIỆN === */
        </style>

        <div id="chatButton" class="chat-widget-button">
            <i class="bi bi-chat-dots-fill"></i>
        </div>

        <div id="chatPopup" class="chat-popup" style="display: none; flex-direction: column;">
            <div class="chat-header">Trò chuyện trực tuyến</div>
            <div class="chat-messages" id="chatMessages" style="flex-grow: 1; padding: 1rem; overflow-y: auto; background: #f4f7f6;">
                </div>
            <div class="chat-input" style="display: flex; border-top: 1px solid #ddd;">
                <input type="text" id="chatInput" placeholder="Nhập tin nhắn..." style="flex-grow: 1; border: none; padding: 1rem;" />
                <button id="chatSendButton" style="border: none; background: #0d6efd; color: white; padding: 0 1rem;"><i class="bi bi-send-fill"></i></button>
            </div>
        </div>

        <script>
        document.addEventListener("DOMContentLoaded", function () {
            const chatButton = document.getElementById("chatButton");
            const chatPopup = document.getElementById("chatPopup");
            const chatMessages = document.getElementById("chatMessages");
            const chatInput = document.getElementById("chatInput");
            const chatSendButton = document.getElementById("chatSendButton");

            // ===== PHẦN SỬA LỖI =====
            // 1. GÁN SỰ KIỆN MỞ/ĐÓNG POPUP LÊN ĐẦU TIÊN
            // Logic này không phụ thuộc vào SignalR nên sẽ luôn chạy
            chatButton.addEventListener("click", () => {
                const isDisplayed = chatPopup.style.display === "flex";
                chatPopup.style.display = isDisplayed ? "none" : "flex";
            });
            // ===== KẾT THÚC PHẦN SỬA LỖI =====


            // 2. HÀM THÊM TIN NHẮN (Giữ nguyên)
            function appendMessage(user, message, isCustomer) {
                const msgDiv = document.createElement("div");
                msgDiv.className = isCustomer ? 'msg-customer mb-2' : 'msg-staff mb-2';
                msgDiv.innerHTML = `<strong>${user}:</strong> <span>${message}</span>`;
                chatMessages.appendChild(msgDiv);
                chatMessages.scrollTop = chatMessages.scrollHeight; // Tự cuộn xuống
            }

            // 3. KIỂM TRA SIGNALR TRƯỚC KHI KẾT NỐI
            if (typeof signalR === 'undefined') {
                console.error("Lỗi: Thư viện SignalR (signalr.min.js) chưa được tải. Chat sẽ không hoạt động.");
                appendMessage("Hệ thống", "Không thể kết nối máy chủ chat.", false);
                return; // Dừng, không chạy code kết nối nữa
            }

            // 4. LOGIC KẾT NỐI SIGNALR (Giữ nguyên như cũ)
            const connection = new signalR.HubConnectionBuilder()
                .withUrl("/chatHub") // Đường dẫn đã map trong Program.cs
                .build();

            // Lắng nghe tin nhắn trả lời từ Staff
            connection.on("ReceiveStaffReply", function (staffName, message) {
                appendMessage(staffName, message, false);
            });

            // Gửi tin nhắn (khi nhấn nút hoặc Enter)
            async function sendMessage() {
                const message = chatInput.value;
                if (message.trim() === "") return;

                try {
                    // Gọi hàm "CustomerSendMessage" trên Hub
                    await connection.invoke("CustomerSendMessage", message);
            
                    // Hiển thị tin nhắn của chính mình
                    appendMessage("Bạn", message, true);
                    chatInput.value = "";
                } catch (err) {
                    console.error(err);
                }
            }
    
            chatSendButton.addEventListener("click", sendMessage);
            chatInput.addEventListener("keyup", function(event) {
                if (event.key === "Enter") sendMessage();
            });

            // Khởi động kết nối
            async function startConnection() {
                try {
                    await connection.start();
                    console.log("SignalR Connected (Customer).");
                } catch (err) {
                    console.error(err);
                    setTimeout(startConnection, 5000); // Thử kết nối lại sau 5 giây
                }
            }

            startConnection();
        });
        </script>
    }
</body>
</html>